#!/usr/bin/env python
# encoding: utf8
"""
iTunes API searcher.

Usage:
  ipic (-i | --ios)       <search_term>
  ipic (-m | --mac)       <search_term>
  ipic (-a | --album)     <search_term>
  ipic (-f | --film)      <search_term>
  ipic (-t | --tv)        <search_term>
  ipic (-b | --book)      <search_term>
  ipic (-n | --narration) <search_term>
  ipic (-h | --help)      <search_term>

Options:
  -h --help         Show this screen
  -i --ios          iOS app
  -m --mac          Mac app
  -a --album        album
  -f --film         movie (film)
  -t --tv           TV show
  -b --book         book
  -n --narration    audiobook (narration)
"""

import requests
import docopt
import os
import subprocess

# You may want to change these.
myDir = os.environ['HOME'] + '/Desktop/'    # directory for HTML file
browser = 'com.apple.Safari'                # browser bundle identifier

# Handle the command line.
args = docopt.docopt(__doc__)
searchterm = args['<search_term>']
if args['--ios']:
  size = 512
  media = 'software'
  entity = 'software'
  name = 'trackName'
elif args['--mac']:
  size = 512
  media = 'software'
  entity = 'macSoftware'
  name = 'trackName'
elif args['--album']:
  size = 600
  media = 'music'
  entity = 'album'
  name = 'collectionName'
elif args['--film']:
  size = 600
  media = 'movie'
  entity = 'movie'
  name = 'trackName'
elif args['--tv']:
  size = 600
  media = 'tvShow'
  entity = 'tvSeason'
  name = 'collectionName'
elif args['--book']:
  size = 600
  media = 'ebook'
  entity = 'ebook'
  name = 'trackName'
elif args['--narration']:
  size = 600
  media = 'audiobook'
  entity = 'audiobook'
  name = 'collectionName'
else:
  size = 600
  media = ''
  entity = ''
  name = ''

# Make the iTunes search call and collect the thumbnail and large image URLs.
iURL = 'https://itunes.apple.com/search'
parameters = {'term': searchterm, 'media': media, 'entity': entity}
r = requests.get(iURL, params=parameters)
results = r.json()['results']
turls = [ x['artworkUrl100'] for x in results ]
burls = [ x.replace('100x100', '{0}x{0}'.format(size)) for x in turls ]
names = [ x[name] for x in results ]

# Construct the HTML.
linkFmt = '<a href="{1}"><img src="{0}" alt="{2}", title="{2}" /></a>'
links = [linkFmt.format(x, y, z.encode('utf8'))
          for x, y, z in zip(turls, burls, names) ]
html = '''<html>                                                        <head><title>{0} pictures</title></head>
<body>
<h1>“{0}” pictures</h1>
{1}
</body>
</html>'''.format(searchterm, '\n'.join(links))

# Create an HTML file and open it.
htmlFile = myDir + searchterm + '.html'
with open(htmlFile, 'w') as f:
  f.write(html)

subprocess.check_call(['open', '-b', browser, htmlFile])
